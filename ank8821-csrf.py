import requests,re,random

url = "http://127.0.0.1/login.html"
# url2 = "http://127.0.0.1/gift/0"

data = {
    'uname':'client',
    'pword':'client',
}

data2 = {
    'amount':random.randint(0,1000),
    'username':'attacker'
}
proxy = {'http':'http://127.0.0.1:8080'}
with requests.Session() as session:
    
    # Getting the initial csrftoken
    get_token = session.get(url).headers
    print("Performing Initial GET Request to check for csrf token")
    try:
        csrf = re.search('csrftoken=\w*',get_token['Set-Cookie']).group(0).split('=')
        print('Token Found: {}'.format(csrf[1]))
        print("\nNot vulnerable to CSRF!")
    except:
        print("Token not found.")
        print("\nVulnerable to CSRF!")
    # print("Performing Login")

    # # Loggin in using the obtained token
    # data['csrfmiddlewaretoken']=csrf[1]
    # r = session.post(url,data=data,allow_redirects=False).headers

    # # Grabbing the new csrf token and session id
    # new_csrf = re.search('csrftoken=\w*',r['Set-Cookie']).group(0).split('=')
    # sessid = re.search('sessionid=\w*',r['Set-Cookie']).group(0).split('=')
    # cookie = {sessid[0]:sessid[1]}
    # data2['csrfmiddlewaretoken'] = new_csrf[1]
    # print("Checking for CSRF Vulnerability")

    # # Sending payload after logging in and checking for XSS
    # req = session.post(url2,data=data2,cookies=cookie)
        
        